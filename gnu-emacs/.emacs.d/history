;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(read-number-history xref--read-pattern-history xref--read-identifier-history goto-line-history command-history file-name-history buffer-name-history minibuffer-history extended-command-history))
(setq command-history '((package-install 'doom-modeline nil) (execute-extended-command nil "package-install" "pac") (previous-buffer 1 1) (execute-extended-command nil "previous-buffer") (switch-to-buffer "*scratch*" nil 'force-same-window) (switch-to-buffer "init.el" nil 'force-same-window) (switch-to-buffer "config.org" nil 'force-same-window) (find-file "~/.emacs.d/init.el" t) (previous-buffer 1 1) (execute-extended-command nil "previous-buffer" "buff pre") (ibuffer nil) (execute-extended-command nil "ibuffer" "ib") (find-file "~/.emacs.d/config.org" t) (find-file "~/.emacs.d/config.org" t) (find-file "~/.emacs.d/config.org_archive" t) (find-file "~/.emacs.d/init.el" t) (switch-to-buffer "config.org" nil 'force-same-window) (switch-to-buffer "*Messages*" nil 'force-same-window) (switch-to-buffer "*Messages*" nil 'force-same-window) (undo-redo 1) (execute-extended-command nil "undo-redo" "redo") (find-file "~/.emacs.d/init.el" t) (switch-to-buffer "*Messages*" nil 'force-same-window) (vterm nil) (execute-extended-command nil "vterm" "vterm") (find-file "~/.emacs.d/config.org" t)))
(setq file-name-history '("~/.emacs.d/init.el" "~/.emacs.d/config.org" "~/.emacs.d/config.org_archive" "~/.emacs.d/init.el" "~/.emacs.d/config.org" "~/.emacs.d/init.el" "~/.emacs.d/config.org"))
(setq buffer-name-history '("*scratch*" "init.el" "config.org" "*Messages*" "init.el" "config.org" "*Ibuffer*" "*Warnings*"))
(setq minibuffer-history '("doom-modeline"))
(setq extended-command-history '("package-install" "previous-buffer" "ibuffer" "undo-redo" "vterm" "ibuffer" "switch-to-buffer" "ido-kill-buffer" "kill-buffer" "vterm-mode" "vertico-buffer-mode" "ibuffer" "my-line-save" "eval-region" "package-install" "eval-region" "package-install" "package-refresh-contents"))
